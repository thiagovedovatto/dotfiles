#!/bin/bash

# Função para atualizar o sistema
atualizar_sistema() {
  printf "Atualizando a lista de pacotes e realizando a atualização do sistema...\n"
  sudo apt update && sudo apt upgrade -y && sudo apt autoremove -y
}

instalar_brew() {
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
}

# Função para instalar pacotes essenciais
instalar_pacotes_essenciais() {
  local pacotes_apt=(
    btop
    cmake
    curl
    g++
    git
    libfontconfig1-dev
    libfreetype6-dev
    libxcb-xfixes0-dev
    libxkbcommon-dev
    pcmanfm
    fish
    pkg-config
    python3
    shellcheck
    npm
    nodejs
    terminator
    ripgrep
    luarocks
    tmux
  )

  local pacotes_brew=(
    neovim
    fzf
    luarocks
    markdown-toc
    markdownlint-cli2
    viu
    chafa
    julia
    rust
    fd
  )

  printf "Instalando pacotes essenciais...\n"
  sudo apt install -y "${pacotes_apt[@]}"
  brew install "${pacotes_brew[@]}"
  printf "Todos os pacotes foram instalados com sucesso!\n"
}

# Função para gerenciar fontes
gerenciar_fontes() {
  local home_dir="/home/supervedovatto"
  local font_dir="$home_dir/.fonts"
  local repo_url="git@github.com:thiagovedovatto/myfonts.git"

  # Verifica e atualiza ou clona o repositório de fontes
  if [[ -d $font_dir ]]; then
    if [[ -d $font_dir/.git ]]; then
      git -C "$font_dir" pull
    else
      rm -rf "$font_dir"
      git clone "$repo_url" "$font_dir"
    fi
  else
    git clone "$repo_url" "$font_dir"
  fi

  # Atualiza o cache de fontes
  sudo fc-cache -vf
}

# Função para instalar ou atualizar o Oh My Bash
instalar_oh_my_bash() {
  if [[ -d ~/.oh-my-bash ]]; then
    source $OSH/tools/upgrade.sh
  else
    bash -c "$(curl -fsSL https://raw.githubusercontent.com/ohmybash/oh-my-bash/master/tools/install.sh)"
  fi
}

# Função para instalar o Alacritty
instalar_alacritty() {
  if ! command -v alacritty &>/dev/null; then
    sudo add-apt-repository ppa:aslatter/ppa -y
    sudo apt install alacritty -y
  else
    echo "Alacritty já está instalado!"
  fi
}

# Função para importar temas do Alacritty
importar_temas_alacritty() {
  if [[ ! -d ~/.config/alacritty ]]; then
    mkdir -p ~/.config/alacritty/
    git clone https://github.com/alacritty/alacritty-theme ~/.config/alacritty/
  fi
}

# Função para instalar plugins do Tmux
instalar_plugins_tmux() {
  if [[ ! -d ~/.tmux/plugins/tpm ]]; then
    git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
  fi

  if [[ ! -d ~/.config/tmux/plugins/catppuccin ]]; then
    mkdir -p ~/.config/tmux/plugins/catppuccin
    git clone https://github.com/catppuccin/tmux.git ~/.config/tmux/plugins/catppuccin
  fi
}

# Função para instalar o tema Catppuccin no btop
instalar_tema_catppuccin_btop() {
  if [[ ! -d ~/.config/btop/themes ]]; then
    git clone https://github.com/catppuccin/btop ~/.config/btop/themes
  else
    git clone https://github.com/catppuccin/btop ~/Downloads/tmp
    mv ~/Downloads/tmp/themes/* ~/.config/btop/themes
    rm -rf ~/Downloads/tmp
  fi
}

# Função para instalar o tema Catppuccin no Gnome Terminal
instalar_tema_catppuccin_gnome_terminal() {
  curl -L https://raw.githubusercontent.com/catppuccin/gnome-terminal/v1.0.0/install.py | python3 -
}

# Função principal para executar o processo
main() {
  atualizar_sistema
  instalar_pacotes_essenciais
  # instalar_brew
  # gerenciar_fontes
  # instalar_oh_my_bash
  # instalar_alacritty
  # importar_temas_alacritty
  # instalar_plugins_tmux
  # instalar_tema_catppuccin_btop
  # instalar_tema_catppuccin_gnome_terminal
}

# Chama a função principal
main
